[base]
name = neurots
files = {[base]name} tests doc/source/conf.py setup.py

[tox]
envlist =
    check-version
    lint
    py3
    coverage
minversion = 3.1.0

[testenv]
setenv =
    PIP_INDEX_URL = https://bbpteam.epfl.ch/repository/devpi/simple
    PIP_EXTRA_INDEX_URL = https://pypi.python.org/simple
    COVERAGE_FILE = {env:COVERAGE_FILE:.coverage-{envname}}
    PYTEST_NPROCS = {env:PYTEST_NPROCS:'auto'}
extras = test
commands = pytest \
    -n {env:PYTEST_NPROCS} \
    --basetemp={envtmpdir} \
    --cov={[base]name} \
    --cov-branch \
    --no-cov-on-fail \
    --cov-report term-missing \
    --cov-report html:reports/coverage-{envname} \
    --cov-report xml:reports/coverage-{envname}.xml \
    --cov-fail-under=96.9 \
    --html reports/pytest-{envname}.html \
    --junit-xml=reports/pytest-{envname}.xml \
    --self-contained-html \
    {posargs}

[testenv:coverage]
skip_install = true
deps = coverage
allowlist_externals = /bin/bash
commands =
    /bin/bash -c 'if ls .coverage-py* 1> /dev/null 2>&1; then \
        coverage combine .coverage-py*; \
        coverage xml; \
        coverage report --show-missing; \
    else \
        echo NO COVERAGE FILE FOUND; \
    fi;'

[testenv:check-version]
skip_install = true
deps = bbp-nse-ci
commands = do_release.py -p . check-version

[testenv:check-packaging]
skip_install = true
deps =
    wheel
    twine
commands =
    python setup.py sdist bdist_wheel -d {envtmpdir}/dist
    twine check {envtmpdir}/dist/*

[testenv:lint]
basepython= python3.6
deps =
    black
    isort
    pycodestyle
    pydocstyle
    pylint<=2.6.0
commands =
    pycodestyle {[base]files}
    pydocstyle {[base]files}
    isort --check-only --diff {[base]files}
    black --check {[base]files}
    pylint -j 0 {[base]files}

[testenv:format]
basepython = python3.6
skip_install = true
deps =
    black
    isort
commands =
    isort {[base]files}
    black {[base]files}

[testenv:docs]
changedir = doc
extras = docs
allowlist_externals = make
commands =
    make clean
    make html SPHINXOPTS=-W

# E127: continuation line over-indented for visual indent
# E128: continuation line under-indented for visual indent
; E203: whitespace before ':'
# E731: do not assign a lambda expression, use a def
# W503: line break before binary operator
# W504: line break after binary operator
[pycodestyle]
ignore = E127,E128,E203,E731,W503,W504
max-line-length = 100
